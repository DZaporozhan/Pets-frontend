{"version":3,"file":"static/js/977.07b4bead.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.js","components/AuthForm/Login/Login.jsx","components/AuthForm/Registration/SignUpStep1.jsx","components/AuthForm/Registration/SignUpStep2.jsx","components/AuthForm/Registration/Registration.jsx","components/AuthForm/AuthForm.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 80px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 0;\n  background: #fdf7f2;\n  @media ${p => p.theme.device.tablet} {\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n    max-width: 618px;\n    background: ${p => p.theme.colors.white};\n    padding: 60px 0;\n  }\n`;\n\nexport const RegisterHeader = styled.h2`\n  margin-bottom: 40px;\n  letter-spacing: 0.04em;\n  line-height: 49px;\n  font-size: ${p => p.theme.fontSizes[5]}px;\n  font-family: ${p => p.theme.fonts.body};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  @media ${p => p.theme.device.tablet} {\n    font-size: ${p => p.theme.fontSizes[8]}px;\n  }\n`;\n\nexport const FormText = styled.p`\n  font-family: ${p => p.theme.fonts.body};\n  font-weight: ${p => p.theme.fontWeights.regular};\n  font-size: ${p => p.theme.fontSizes[0]}px;\n  letter-spacing: 0.04em;\n  line-height: 16px;\n  color: rgba(17, 17, 17, 0.6);\n`;\n\nexport const RegisterLink = styled(NavLink)`\n  display: inline-block;\n  margin-left: 2px;\n  color: ${p => p.theme.colors.blue};\n`;\n\nexport const FormInput = styled.input`\n  box-sizing: border-box;\n  display: flex;\n  width: 280px;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: ${p => p.theme.radii.normal};\n  padding: 14px 32px;\n  font-size: ${p => p.theme.fontSizes[3]}px;\n  margin-bottom: 16px;\n  outline: ${p => p.theme.colors.accent};\n  background-color: ${p => p.theme.colors.background};\n  &:focus-visible {\n    border: 1px solid #f59256;\n  }\n  &::placeholder {\n    font-size: ${p => p.theme.fontSizes[3]}px;\n    letter-spacing: 0.04em;\n    line-height: 25px;\n    font-weight: ${p => p.theme.fontWeights.regular};\n    font-family: ${p => p.theme.fonts.body};\n  }\n  @media ${p => p.theme.device.tablet} {\n    width: 458px;\n  }\n`;\n\nexport const AuthButton = styled.button`\n  width: 100%;\n  margin-top: 40px;\n  margin-bottom: 16px;\n  padding: 10.5px 0;\n  border-radius: ${p => p.theme.radii.normal};\n  letter-spacing: 0.04em;\n  line-height: 27px;\n  font-size: ${p => p.theme.fontSizes[4]}px;\n  color: ${p => p.theme.colors.white};\n  border: 2px solid rgba(245, 146, 86, 0.5);\n  box-shadow: none;\n  background-color: ${p => p.theme.colors.accent};\n  font-family: ${p => p.theme.fonts.body};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  outline: ${p => p.theme.colors.accent};\n  &:hover,\n  &:focus {\n    box-shadow: none;\n    border: 2px solid #ff7e2f;\n    background-color: #ff7e2f;\n  }\n`;\n\nexport const BackButton = styled.button`\n  width: 100%;\n  margin-bottom: 40px;\n  padding: 10.5px 0;\n  border-radius: 40px;\n  letter-spacing: 0.04em;\n  line-height: 27px;\n  font-size: 20px;\n  border: 2px solid #f59256;\n  color: ${p => p.theme.colors.black};\n  outline: ${p => p.theme.colors.accent};\n  background-color: ${p => p.theme.colors.white};\n  font-family: ${p => p.theme.fonts.body};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  &:hover,\n  &:focus {\n    color: #ff7e2f;\n    box-shadow: none;\n    border: 2px solid #ff7e2f;\n  }\n`;\n\nexport const FirstInpError = styled.p`\n  position: absolute;\n  color: red;\n  min-width: 260px;\n  top: 160px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 12px;\n  @media ${p => p.theme.device.tablet} {\n    top: 200px;\n  }\n`;\n\nexport const SecondInpError = styled.p`\n  position: absolute;\n  color: red;\n  min-width: 260px;\n  top: 227px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 12px;\n  @media ${p => p.theme.device.tablet} {\n    top: 267px;\n  }\n`;\n\nexport const ThirdInpError = styled.p`\n  position: absolute;\n  color: red;\n  min-width: 260px;\n  top: 295px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 12px;\n  @media ${p => p.theme.device.tablet} {\n    top: 335px;\n  }\n`;\n","import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/operations';\nimport * as Yup from 'yup';\nimport { NavLink } from 'react-router-dom';\n\nimport {\n  AuthButton,\n  FirstInpError,\n  FormInput,\n  SecondInpError,\n} from '../AuthForm.styled';\nconst emailRegexp =\n  // eslint-disable-next-line no-useless-escape\n  /^(?=.{10,63}$)(([0-9A-Za-z]{1}[-0-9A-z\\.]{1,}[0-9A-Za-z]{1})@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/;\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Please enter your registered email')\n    .required('Please enter your email')\n    .matches(\n      emailRegexp,\n      'Please enter a valid value using English characters'\n    ),\n  password: Yup.string()\n    .trim()\n    .required('Please enter password')\n    .min(7, 'The password you entered is incorrect. Please try again')\n    .max(32, 'The password you entered is incorrect. Please try again'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      dispatch(\n        login({\n          email: values.email,\n          password: values.password,\n        })\n      );\n\n      formik.resetForm();\n    },\n  });\n  return (\n    <>\n      <form onSubmit={formik.handleSubmit}>\n        <FormInput\n          id=\"email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          placeholder=\"Email\"\n        />\n        {formik.touched.email && formik.errors.email && (\n          <FirstInpError>{formik.errors.email}</FirstInpError>\n        )}\n        <FormInput\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          autoComplete=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          placeholder=\"Password\"\n        />\n        {formik.touched.password && formik.errors.password && (\n          <SecondInpError>{formik.errors.password}</SecondInpError>\n        )}\n        <AuthButton type=\"submit\">Login</AuthButton>\n      </form>\n      <NavLink to={'https://pets-api-team1.onrender.com/api/auth/google'}>\n        Click me to authorize with Google!\n      </NavLink>\n    </>\n  );\n};\n\nexport default Login;\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  AuthButton,\n  FirstInpError,\n  FormInput,\n  SecondInpError,\n  ThirdInpError,\n} from '../AuthForm.styled';\nconst emailRegexp =\n  // eslint-disable-next-line no-useless-escape\n  /^(?=.{10,63}$)(([0-9A-Za-z]{1}[-0-9A-z\\.]{1,}[0-9A-Za-z]{1})@([-A-Za-z]{1,}\\.){1,2}[-A-Za-z]{2,})$/;\n\nconst validationSchema = Yup.object({\n  email: Yup.string()\n    .email('Please enter valid email')\n    .required('Please enter your email')\n    .matches(\n      emailRegexp,\n      'Please enter a valid value using English characters'\n    ),\n  password: Yup.string()\n    .trim()\n    .required('Please enter password')\n    .min(7, 'Please enter at least 7 characters')\n    .max(32, 'Name should be 32 characters or less'),\n  confirmPassword: Yup.string()\n    .required('Please enter your password again ')\n    .oneOf(\n      [Yup.ref('password'), null],\n      'Password doesn’t match. Please, try again'\n    ),\n});\n\nconst SignUpStep1 = ({ data, onSubmit }) => {\n  const formik = useFormik({\n    initialValues: {\n      email: data.email || '',\n      password: data.password || '',\n      confirmPassword: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      if (values.password === values.confirmPassword) {\n        onSubmit({\n          email: values.email,\n          password: values.password,\n        });\n      }\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <FormInput\n        id=\"email\"\n        name=\"email\"\n        value={formik.values.email}\n        onChange={formik.handleChange}\n        placeholder=\"Email\"\n      />\n      {formik.touched.email && formik.errors.email && (\n        <FirstInpError>{formik.errors.email}</FirstInpError>\n      )}\n      <FormInput\n        id=\"password\"\n        name=\"password\"\n        type=\"password\"\n        autoComplete=\"password\"\n        value={formik.values.password}\n        onChange={formik.handleChange}\n        placeholder=\"Password\"\n      />\n      {formik.touched.password && formik.errors.password && (\n        <SecondInpError>{formik.errors.password}</SecondInpError>\n      )}\n      <FormInput\n        id=\"confirmPassword\"\n        name=\"confirmPassword\"\n        label=\"Confirm Password\"\n        type=\"password\"\n        autoComplete=\"password\"\n        value={formik.values.confirmPassword}\n        onChange={formik.handleChange}\n        placeholder=\"Confirm Password\"\n      />\n      {formik.touched.confirmPassword && formik.errors.confirmPassword && (\n        <ThirdInpError>{formik.errors.confirmPassword}</ThirdInpError>\n      )}\n\n      <AuthButton type=\"submit\">Next</AuthButton>\n    </form>\n  );\n};\n\nexport default SignUpStep1;\n","import { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport {\n  AuthButton,\n  BackButton,\n  FirstInpError,\n  SecondInpError,\n  ThirdInpError,\n  FormInput,\n} from '../AuthForm.styled';\nimport { register } from 'redux/auth/operations';\n\nconst nameRegexp = /^(?=.{2,16}$)([- A-Za-z])*$/;\n// eslint-disable-next-line no-useless-escape\nconst cityRegEx = /^[- a-z\\']+(?:(?:(,\\s|,)[-a-z]+))$/i;\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .trim()\n    .required('Please enter your name')\n    .matches(nameRegexp, 'Please enter a valid value using English characters')\n    .min(2, 'Please enter at least 2 characters')\n    .max(16, 'Name must have max 16 letters'),\n  city: Yup.string()\n    .trim()\n    .matches(/\\s/, 'There must be a space between the City and the Region.')\n    .required('Please enter your City and Region')\n    .matches(cityRegEx, 'Please enter a valid city format: City, Region'),\n  phone: Yup.string()\n    .required('Please enter your phone')\n    .matches(\n      /^\\+380\\d{9}$/,\n      'Please enter a valid value using +380XXXXXXXXX format'\n    ),\n});\n\nconst SignUpStep2 = ({ data, step1, onBack }) => {\n  const { email, password } = step1;\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: data.name || '',\n      city: data.city || '',\n      phone: data.phone || '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      dispatch(\n        register({\n          email,\n          password,\n          name: values.name.trim(),\n          city: values.city.trim(),\n          phone: values.phone,\n        })\n      );\n    },\n  });\n\n  const reqData = {\n    name: formik.values.name,\n    city: formik.values.city,\n    phone: formik.values.phone,\n  };\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <FormInput\n        id=\"name\"\n        name=\"name\"\n        placeholder=\"Name\"\n        value={formik.values.name}\n        onChange={formik.handleChange}\n      />\n      {formik.touched.name && formik.errors.name && (\n        <FirstInpError>{formik.errors.name}</FirstInpError>\n      )}\n      <FormInput\n        id=\"city\"\n        name=\"city\"\n        placeholder=\"City, region\"\n        value={formik.values.city}\n        onChange={formik.handleChange}\n      />\n      {formik.touched.city && formik.errors.city && (\n        <SecondInpError>{formik.errors.city}</SecondInpError>\n      )}\n      <FormInput\n        id=\"phone\"\n        name=\"phone\"\n        type=\"phone\"\n        autoComplete=\"phone\"\n        placeholder=\"Phone\"\n        value={formik.values.phone}\n        onChange={formik.handleChange}\n      />{' '}\n      {formik.touched.phone && formik.errors.phone && (\n        <ThirdInpError>{formik.errors.phone}</ThirdInpError>\n      )}\n      <AuthButton type=\"submit\">Register</AuthButton>\n      <BackButton type=\"button\" onClick={() => onBack(reqData)}>\n        Back\n      </BackButton>\n    </form>\n  );\n};\n\nexport default SignUpStep2;\n","import { useState } from 'react';\nimport SignUpStep1 from './SignUpStep1';\nimport SignUpStep2 from './SignUpStep2';\n\nconst Registration = () => {\n  const [isNext, setIsNext] = useState(true);\n  const [step1Data, setStep1Data] = useState({});\n  const [step2Data, setStep2Data] = useState({});\n\n  const firstStepData = data => {\n    if (data.email !== '' && data.password !== '') {\n      setIsNext(false);\n      setStep1Data(data);\n    }\n  };\n  const secondStepData = data => {\n    setStep2Data(data);\n    setIsNext(true);\n  };\n\n  return (\n    <>\n      {isNext ? (\n        <SignUpStep1 data={step1Data} onSubmit={firstStepData} />\n      ) : (\n        <SignUpStep2\n          data={step2Data}\n          step1={step1Data}\n          onBack={secondStepData}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Registration;\n","import {\n  FormContainer,\n  FormText,\n  RegisterHeader,\n  RegisterLink,\n} from './AuthForm.styled';\nimport Login from './Login/Login';\nimport Registration from './Registration/Registration';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/auth/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\nconst regisnrationPageLink = (\n  <FormText>\n    Don't have an account?\n    <RegisterLink to=\"/register\">Register</RegisterLink>\n  </FormText>\n);\nconst regisnrationLoginLink = (\n  <FormText>\n    Already have an account?\n    <RegisterLink to=\"/login\">Login</RegisterLink>\n  </FormText>\n);\nconst AuthForm = ({ type }) => {\n  const isLoding = useSelector(selectIsLoading);\n  return isLoding ? (\n    <Loader />\n  ) : (\n    <FormContainer>\n      <RegisterHeader>\n        {type === 'login' ? 'Login' : 'Registration'}\n      </RegisterHeader>\n      {type === 'login' ? <Login /> : <Registration />}\n      {type === 'login' ? regisnrationPageLink : regisnrationLoginLink}\n    </FormContainer>\n  );\n};\n\nexport default AuthForm;\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  margin: 0 auto;\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n    margin-top: 30px;\n  }\n`;\n","import AuthForm from 'components/AuthForm/AuthForm';\nimport { Main } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  return (\n    <Main>\n      <AuthForm type=\"login\" />\n    </Main>\n  );\n};\n\nexport default LoginPage;\n"],"names":["FormContainer","styled","p","theme","device","tablet","colors","white","RegisterHeader","fontSizes","fonts","body","fontWeights","medium","FormText","regular","RegisterLink","NavLink","blue","FormInput","radii","normal","accent","background","AuthButton","BackButton","black","FirstInpError","SecondInpError","ThirdInpError","validationSchema","Yup","email","required","matches","password","trim","min","max","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","login","resetForm","handleSubmit","id","name","value","onChange","handleChange","placeholder","touched","errors","type","autoComplete","to","confirmPassword","oneOf","data","label","city","phone","step1","onBack","register","reqData","onClick","useState","isNext","setIsNext","step1Data","setStep1Data","step2Data","setStep2Data","regisnrationPageLink","regisnrationLoginLink","useSelector","selectIsLoading","Loader","Main","AuthForm"],"sourceRoot":""}